/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { metadataFieldsListMetadataFields } from "../../funcs/metadataFieldsListMetadataFields.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  externalIds: z.array(z.string()).optional(),
};

export const tool$metadataFieldsListMetadataFields: ToolDefinition<
  typeof args
> = {
  name: "list-metadata-fields",
  description:
    `Lists all structured metadata fields defined in your Cloudinary product environment

Retrieves a list of all metadata fields in the product environment based on the provided filters.`,
  scopes: ["builder"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await metadataFieldsListMetadataFields(
      client,
      args.externalIds,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
