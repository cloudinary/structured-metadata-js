/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { CloudinarySMDCore } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$metadataFieldsCreateMetadataField } from "./tools/metadataFieldsCreateMetadataField.js";
import { tool$metadataFieldsDeleteMetadataField } from "./tools/metadataFieldsDeleteMetadataField.js";
import { tool$metadataFieldsDeleteMetadataFieldDatasource } from "./tools/metadataFieldsDeleteMetadataFieldDatasource.js";
import { tool$metadataFieldsGetMetadataField } from "./tools/metadataFieldsGetMetadataField.js";
import { tool$metadataFieldsListMetadataFields } from "./tools/metadataFieldsListMetadataFields.js";
import { tool$metadataFieldsUpdateMetadataField } from "./tools/metadataFieldsUpdateMetadataField.js";
import { tool$metadataFieldsUpdateMetadataFieldDatasource } from "./tools/metadataFieldsUpdateMetadataFieldDatasource.js";
import { tool$metadataRulesCreateMetadataRule } from "./tools/metadataRulesCreateMetadataRule.js";
import { tool$metadataRulesDeleteMetadataRule } from "./tools/metadataRulesDeleteMetadataRule.js";
import { tool$metadataRulesListMetadataRules } from "./tools/metadataRulesListMetadataRules.js";
import { tool$metadataRulesUpdateMetadataRule } from "./tools/metadataRulesUpdateMetadataRule.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  security?: SDKOptions["security"] | undefined;
  cloudName?: SDKOptions["cloudName"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
  region?: SDKOptions["region"] | undefined;
  host?: SDKOptions["host"] | undefined;
}) {
  const server = new McpServer({
    name: "CloudinarySMD",
    version: "0.1.2",
  });

  const client = new CloudinarySMDCore({
    security: deps.security,
    cloudName: deps.cloudName,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
    region: deps.region,
    host: deps.host,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$metadataFieldsCreateMetadataField);
  tool(tool$metadataFieldsListMetadataFields);
  tool(tool$metadataFieldsGetMetadataField);
  tool(tool$metadataFieldsUpdateMetadataField);
  tool(tool$metadataFieldsDeleteMetadataField);
  tool(tool$metadataFieldsUpdateMetadataFieldDatasource);
  tool(tool$metadataFieldsDeleteMetadataFieldDatasource);
  tool(tool$metadataRulesCreateMetadataRule);
  tool(tool$metadataRulesListMetadataRules);
  tool(tool$metadataRulesUpdateMetadataRule);
  tool(tool$metadataRulesDeleteMetadataRule);

  return server;
}
