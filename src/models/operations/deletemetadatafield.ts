/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteMetadataFieldGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

export type DeleteMetadataFieldRequest = {
  /**
   * The external ID of the metadata field to retrieve.
   */
  externalId: string;
};

/**
 * metadata field deleted
 */
export type DeleteMetadataFieldResponse = {
  message: string;
};

/** @internal */
export const DeleteMetadataFieldGlobals$inboundSchema: z.ZodType<
  DeleteMetadataFieldGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type DeleteMetadataFieldGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const DeleteMetadataFieldGlobals$outboundSchema: z.ZodType<
  DeleteMetadataFieldGlobals$Outbound,
  z.ZodTypeDef,
  DeleteMetadataFieldGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMetadataFieldGlobals$ {
  /** @deprecated use `DeleteMetadataFieldGlobals$inboundSchema` instead. */
  export const inboundSchema = DeleteMetadataFieldGlobals$inboundSchema;
  /** @deprecated use `DeleteMetadataFieldGlobals$outboundSchema` instead. */
  export const outboundSchema = DeleteMetadataFieldGlobals$outboundSchema;
  /** @deprecated use `DeleteMetadataFieldGlobals$Outbound` instead. */
  export type Outbound = DeleteMetadataFieldGlobals$Outbound;
}

export function deleteMetadataFieldGlobalsToJSON(
  deleteMetadataFieldGlobals: DeleteMetadataFieldGlobals,
): string {
  return JSON.stringify(
    DeleteMetadataFieldGlobals$outboundSchema.parse(deleteMetadataFieldGlobals),
  );
}

export function deleteMetadataFieldGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<DeleteMetadataFieldGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteMetadataFieldGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteMetadataFieldGlobals' from JSON`,
  );
}

/** @internal */
export const DeleteMetadataFieldRequest$inboundSchema: z.ZodType<
  DeleteMetadataFieldRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  external_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "external_id": "externalId",
  });
});

/** @internal */
export type DeleteMetadataFieldRequest$Outbound = {
  external_id: string;
};

/** @internal */
export const DeleteMetadataFieldRequest$outboundSchema: z.ZodType<
  DeleteMetadataFieldRequest$Outbound,
  z.ZodTypeDef,
  DeleteMetadataFieldRequest
> = z.object({
  externalId: z.string(),
}).transform((v) => {
  return remap$(v, {
    externalId: "external_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMetadataFieldRequest$ {
  /** @deprecated use `DeleteMetadataFieldRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteMetadataFieldRequest$inboundSchema;
  /** @deprecated use `DeleteMetadataFieldRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteMetadataFieldRequest$outboundSchema;
  /** @deprecated use `DeleteMetadataFieldRequest$Outbound` instead. */
  export type Outbound = DeleteMetadataFieldRequest$Outbound;
}

export function deleteMetadataFieldRequestToJSON(
  deleteMetadataFieldRequest: DeleteMetadataFieldRequest,
): string {
  return JSON.stringify(
    DeleteMetadataFieldRequest$outboundSchema.parse(deleteMetadataFieldRequest),
  );
}

export function deleteMetadataFieldRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteMetadataFieldRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteMetadataFieldRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteMetadataFieldRequest' from JSON`,
  );
}

/** @internal */
export const DeleteMetadataFieldResponse$inboundSchema: z.ZodType<
  DeleteMetadataFieldResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type DeleteMetadataFieldResponse$Outbound = {
  message: string;
};

/** @internal */
export const DeleteMetadataFieldResponse$outboundSchema: z.ZodType<
  DeleteMetadataFieldResponse$Outbound,
  z.ZodTypeDef,
  DeleteMetadataFieldResponse
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMetadataFieldResponse$ {
  /** @deprecated use `DeleteMetadataFieldResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteMetadataFieldResponse$inboundSchema;
  /** @deprecated use `DeleteMetadataFieldResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteMetadataFieldResponse$outboundSchema;
  /** @deprecated use `DeleteMetadataFieldResponse$Outbound` instead. */
  export type Outbound = DeleteMetadataFieldResponse$Outbound;
}

export function deleteMetadataFieldResponseToJSON(
  deleteMetadataFieldResponse: DeleteMetadataFieldResponse,
): string {
  return JSON.stringify(
    DeleteMetadataFieldResponse$outboundSchema.parse(
      deleteMetadataFieldResponse,
    ),
  );
}

export function deleteMetadataFieldResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteMetadataFieldResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteMetadataFieldResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteMetadataFieldResponse' from JSON`,
  );
}
